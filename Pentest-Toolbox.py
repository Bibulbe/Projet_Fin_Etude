import tkinter as tk
from tkinter import messagebox
import nmap

# fonction pour valider l'adresse IP saisie
def validate_ip(ip):
  # votre code de validation de l'adresse IP va ici
  # par exemple :
  if ip.count('.') != 3:
    return False
  for octet in ip.split('.'):
    try:
      int_octet = int(octet)
    except ValueError:
      return False
    if not (0 <= int_octet <= 255):
      return False
  return True

# fonction pour afficher les options
def show_options():
  # créer une fenêtre pour afficher les options
  options_window = tk.Toplevel()
  options_window.geometry('200x150')
  options_window.title('Choix')

  # ajouter les boutons pour les options
  tk.Button(options_window, text='Scan nmap', command=nmap_scan).pack()
  tk.Button(options_window, text='Option 2', command=option2).pack()
  tk.Button(options_window, text='Option 3', command=option3).pack()

# fonction pour lancer un scan nmap sur l'adresse IP saisie
def nmap_scan():
  # récupérer la valeur saisie dans l'entrée
  ip = ip_entry.get()

  # initialiser l'objet nmap
  nm = nmap.PortScanner()

  # lancer un scan nmap sur l'adresse IP
  nm.scan(ip,"1-1000")

  # récupérer les informations du scan
  service_versions = ""
  for host in nm.all_hosts():
    for proto in nm[host].all_protocols():
      lport = nm[host][proto].keys()
      sorted(lport)
      for port in lport:
        service_versions += "Port: {0}\tService: {1}\tVersion: {2}\n".format(port, nm[host][proto][port]["name"],nm[host][proto][port]["version"])

  # afficher le résultat du scan nmap
  messagebox.showinfo('Scan nmap', service_versions)

# fonction pour traiter le choix de l'option 2
def option2():
  messagebox.showinfo('Option 2', 'Vous avez choisi l\'option 2')

# fonction pour traiter le choix de l'option 3
def option3():
  messagebox.showinfo('Option 3', 'Vous avez choisi l\'option 3')

# fonction pour traiter la saisie de l'adresse IP
def process_ip_entry():
  # récupérer la valeur saisie dans l'entrée
  ip = ip_entry.get()
  # valider l'adresse IP
  if validate_ip(ip):
    # si l'adresse IP est valide, afficher les options
    show_options()
  else:
    # si l'adresse IP n'est pas valide, afficher un message d'erreur
    messagebox.showerror('Erreur', 'L\'adresse IP saisie n\'est pas valide')
# créer la fenêtre principale de l'interface graphique
root = tk.Tk()
root.geometry('400x200')
root.title('Saisie d\'adresse IP')


# ajouter un étiquette pour indiquer à l'utilisateur quoi faire
tk.Label(root, text='Veuillez saisir une adresse IP :').pack()

# ajouter une entrée pour la saisie de l'adresse IP
ip_entry = tk.Entry(root)
ip_entry.pack()

# ajouter un bouton pour traiter la saisie de l'adresse IP
tk.Button(root, text='Valider', command=process_ip_entry).pack()

# afficher l'interface graphique
root.mainloop()